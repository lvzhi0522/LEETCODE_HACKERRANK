class Solution:
    def countPrimes(self, n):
        
        if n<= 2:
            return 0
        
        prime = [1]*n
        prime[0], prime[1]= 0, 0
        
        i = 0
        while i <= n**0.5+1:
            if prime[i]==1:
                prime[i**2:n:i] = [0] * ((n-1-i*i)//i + 1) # nums less than i**2 have been taken care of
            i += 1
        return sum(prime)
        
        
        
        
#         if n<= 2:
#             return 0
        
#         prime = [1 for i in range(n)]
#         prime[0], prime[1]= 0, 0
#         i = 0
#         while i <= n**0.5+1:
#             if prime[i]==1:
#                 k = 2
#                 while i * k < n:                    
#                     prime[i*k] = 0
#                     k += 1
#             i += 1
#         return sum(prime)

        
        
        # if n<= 1:
        #     return 0
        # k=2
        # prim_num = [2]
        # while k <= n:        
        #     limit = prim_num[-1]
        #     for i in prim_num:
        #         if k%i == 0:
        #             break
        #         elif i == limit or i > k**0.5:
        #             prim_num.append(k)
        #             break
        #     k += 1
        # if n == prim_num[-1]:
        #     return len(prim_num)-1 
        # return len(prim_num)
